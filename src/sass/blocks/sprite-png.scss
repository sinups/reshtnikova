// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$c-fb-name: 'c_fb';
$c-fb-x: 0px;
$c-fb-y: 28px;
$c-fb-offset-x: 0px;
$c-fb-offset-y: -28px;
$c-fb-width: 20px;
$c-fb-height: 20px;
$c-fb-total-width: 96px;
$c-fb-total-height: 71px;
$c-fb-image: '../img/sprite-png.png';
$c-fb: (0px, 28px, 0px, -28px, 20px, 20px, 96px, 71px, '../img/sprite-png.png', 'c_fb', );
$c-instagram-name: 'c_instagram';
$c-instagram-x: 48px;
$c-instagram-y: 28px;
$c-instagram-offset-x: -48px;
$c-instagram-offset-y: -28px;
$c-instagram-width: 20px;
$c-instagram-height: 20px;
$c-instagram-total-width: 96px;
$c-instagram-total-height: 71px;
$c-instagram-image: '../img/sprite-png.png';
$c-instagram: (48px, 28px, -48px, -28px, 20px, 20px, 96px, 71px, '../img/sprite-png.png', 'c_instagram', );
$c-mail-name: 'c_mail';
$c-mail-x: 49px;
$c-mail-y: 52px;
$c-mail-offset-x: -49px;
$c-mail-offset-y: -52px;
$c-mail-width: 22px;
$c-mail-height: 16px;
$c-mail-total-width: 96px;
$c-mail-total-height: 71px;
$c-mail-image: '../img/sprite-png.png';
$c-mail: (49px, 52px, -49px, -52px, 22px, 16px, 96px, 71px, '../img/sprite-png.png', 'c_mail', );
$c-phone-name: 'c_phone';
$c-phone-x: 0px;
$c-phone-y: 0px;
$c-phone-offset-x: 0px;
$c-phone-offset-y: 0px;
$c-phone-width: 21px;
$c-phone-height: 24px;
$c-phone-total-width: 96px;
$c-phone-total-height: 71px;
$c-phone-image: '../img/sprite-png.png';
$c-phone: (0px, 0px, 0px, 0px, 21px, 24px, 96px, 71px, '../img/sprite-png.png', 'c_phone', );
$c-vk-name: 'c_vk';
$c-vk-x: 24px;
$c-vk-y: 28px;
$c-vk-offset-x: -24px;
$c-vk-offset-y: -28px;
$c-vk-width: 20px;
$c-vk-height: 20px;
$c-vk-total-width: 96px;
$c-vk-total-height: 71px;
$c-vk-image: '../img/sprite-png.png';
$c-vk: (24px, 28px, -24px, -28px, 20px, 20px, 96px, 71px, '../img/sprite-png.png', 'c_vk', );
$form-name-name: 'form_name';
$form-name-x: 78px;
$form-name-y: 22px;
$form-name-offset-x: -78px;
$form-name-offset-y: -22px;
$form-name-width: 17px;
$form-name-height: 19px;
$form-name-total-width: 96px;
$form-name-total-height: 71px;
$form-name-image: '../img/sprite-png.png';
$form-name: (78px, 22px, -78px, -22px, 17px, 19px, 96px, 71px, '../img/sprite-png.png', 'form_name', );
$form-phone-name: 'form_phone';
$form-phone-x: 78px;
$form-phone-y: 0px;
$form-phone-offset-x: -78px;
$form-phone-offset-y: 0px;
$form-phone-width: 18px;
$form-phone-height: 18px;
$form-phone-total-width: 96px;
$form-phone-total-height: 71px;
$form-phone-image: '../img/sprite-png.png';
$form-phone: (78px, 0px, -78px, 0px, 18px, 18px, 96px, 71px, '../img/sprite-png.png', 'form_phone', );
$phone-name: 'phone';
$phone-x: 25px;
$phone-y: 0px;
$phone-offset-x: -25px;
$phone-offset-y: 0px;
$phone-width: 21px;
$phone-height: 24px;
$phone-total-width: 96px;
$phone-total-height: 71px;
$phone-image: '../img/sprite-png.png';
$phone: (25px, 0px, -25px, 0px, 21px, 24px, 96px, 71px, '../img/sprite-png.png', 'phone', );
$reg1-name: 'reg1';
$reg1-x: 50px;
$reg1-y: 0px;
$reg1-offset-x: -50px;
$reg1-offset-y: 0px;
$reg1-width: 24px;
$reg1-height: 19px;
$reg1-total-width: 96px;
$reg1-total-height: 71px;
$reg1-image: '../img/sprite-png.png';
$reg1: (50px, 0px, -50px, 0px, 24px, 19px, 96px, 71px, '../img/sprite-png.png', 'reg1', );
$reg2-name: 'reg2';
$reg2-x: 0px;
$reg2-y: 52px;
$reg2-offset-x: 0px;
$reg2-offset-y: -52px;
$reg2-width: 21px;
$reg2-height: 19px;
$reg2-total-width: 96px;
$reg2-total-height: 71px;
$reg2-image: '../img/sprite-png.png';
$reg2: (0px, 52px, 0px, -52px, 21px, 19px, 96px, 71px, '../img/sprite-png.png', 'reg2', );
$reg3-name: 'reg3';
$reg3-x: 25px;
$reg3-y: 52px;
$reg3-offset-x: -25px;
$reg3-offset-y: -52px;
$reg3-width: 20px;
$reg3-height: 19px;
$reg3-total-width: 96px;
$reg3-total-height: 71px;
$reg3-image: '../img/sprite-png.png';
$reg3: (25px, 52px, -25px, -52px, 20px, 19px, 96px, 71px, '../img/sprite-png.png', 'reg3', );
$reg4-name: 'reg4';
$reg4-x: 78px;
$reg4-y: 45px;
$reg4-offset-x: -78px;
$reg4-offset-y: -45px;
$reg4-width: 18px;
$reg4-height: 16px;
$reg4-total-width: 96px;
$reg4-total-height: 71px;
$reg4-image: '../img/sprite-png.png';
$reg4: (78px, 45px, -78px, -45px, 18px, 16px, 96px, 71px, '../img/sprite-png.png', 'reg4', );
$spritesheet-width: 96px;
$spritesheet-height: 71px;
$spritesheet-image: '../img/sprite-png.png';
$spritesheet-sprites: ($c-fb, $c-instagram, $c-mail, $c-phone, $c-vk, $form-name, $form-phone, $phone, $reg1, $reg2, $reg3, $reg4, );
$spritesheet: (96px, 71px, '../img/sprite-png.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
